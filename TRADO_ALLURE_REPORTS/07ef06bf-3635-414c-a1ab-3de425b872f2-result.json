{"name": "Filling in delivery details", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementNotInteractableException: Message: Element <input class=\"\"> is not reachable by keyboard\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:180:5\nElementNotInteractableError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:290:5\nwebdriverSendKeysToElement@chrome://remote/content/marionette/interaction.sys.mjs:624:13\ninteraction.sendKeysToElement@chrome://remote/content/marionette/interaction.sys.mjs:598:11\nsendKeysToElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:516:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:157:31", "trace": "driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"c8175f28-a04b-4582-b4d1-8862a63be9a4\")>\n\n    @allure.epic('Test Personal Area')\n    @allure.id(37)\n    @allure.title(\"Filling in delivery details\")\n    @allure.description('Using and filling in the delivery details section will work as intended')\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_fill_in_delivery_info(driver):\n        personal = P.PersonalPage(driver)\n        login = L.LoginPage(driver)\n        with allure.step('Logging in'):\n            login.log_in('0000000000', False, False)\n        with allure.step('Navigating to Personal area'):\n            login.click_login_signup()\n        with allure.step('Filling in personal details'):\n>           personal.inserting_info()\n\nTest_personal_area.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nProject_folder\\pages\\Personal_Pages.py:22: in inserting_info\n    self.insert(PersonalPage.FIRST_NAME, 'Test_name')\nProject_folder\\pages\\common_page.py:51: in insert\n    locator.send_keys(insertion)\nTRADO-interpreter\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:230: in send_keys\n    self._execute(\nTRADO-interpreter\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:403: in _execute\n    return self._parent.execute(command, params)\nTRADO-interpreter\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001A7721FDD10>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"Element <input class=\\\\\"\\\\\"> is not ...ys.mjs:516:29\\\\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:157:31\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: Element <input class=\"\"> is not reachable by keyboard\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:180:5\nE       ElementNotInteractableError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:290:5\nE       webdriverSendKeysToElement@chrome://remote/content/marionette/interaction.sys.mjs:624:13\nE       interaction.sendKeysToElement@chrome://remote/content/marionette/interaction.sys.mjs:598:11\nE       sendKeysToElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:516:29\nE       receiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:157:31\n\nTRADO-interpreter\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: ElementNotInteractableException"}, "description": "Using and filling in the delivery details section will work as intended", "steps": [{"name": "Logging in", "status": "passed", "start": 1680022648187, "stop": 1680022651295}, {"name": "Navigating to Personal area", "status": "passed", "start": 1680022651295, "stop": 1680022651567}, {"name": "Filling in personal details", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementNotInteractableException: Message: Element <input class=\"\"> is not reachable by keyboard\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:180:5\nElementNotInteractableError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:290:5\nwebdriverSendKeysToElement@chrome://remote/content/marionette/interaction.sys.mjs:624:13\ninteraction.sendKeysToElement@chrome://remote/content/marionette/interaction.sys.mjs:598:11\nsendKeysToElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:516:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:157:31\n\n", "trace": "  File \"C:\\Users\\liad\\Documents\\GitHub\\Trado-Testing-project\\Test_personal_area.py\", line 49, in test_fill_in_delivery_info\n    personal.inserting_info()\n  File \"C:\\Users\\liad\\Documents\\GitHub\\Trado-Testing-project\\Project_folder\\pages\\Personal_Pages.py\", line 22, in inserting_info\n    self.insert(PersonalPage.FIRST_NAME, 'Test_name')\n  File \"C:\\Users\\liad\\Documents\\GitHub\\Trado-Testing-project\\Project_folder\\pages\\common_page.py\", line 51, in insert\n    locator.send_keys(insertion)\n  File \"C:\\Users\\liad\\Documents\\GitHub\\Trado-Testing-project\\TRADO-interpreter\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 230, in send_keys\n    self._execute(\n  File \"C:\\Users\\liad\\Documents\\GitHub\\Trado-Testing-project\\TRADO-interpreter\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 403, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\liad\\Documents\\GitHub\\Trado-Testing-project\\TRADO-interpreter\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\liad\\Documents\\GitHub\\Trado-Testing-project\\TRADO-interpreter\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1680022651569, "stop": 1680022651601}], "start": 1680022648187, "stop": 1680022651610, "uuid": "1723104e-0f4d-47c9-a767-19d5cc6d9706", "historyId": "4371b33f4643957a82551ad7e29eb03a", "testCaseId": "6271504dbb33ece00a977b72d7f1d76a", "fullName": "Test_personal_area#test_fill_in_delivery_info", "labels": [{"name": "epic", "value": "Test Personal Area"}, {"name": "severity", "value": "critical"}, {"name": "as_id", "value": 37}, {"name": "suite", "value": "Test_personal_area"}, {"name": "host", "value": "TWEEJ5"}, {"name": "thread", "value": "18924-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_personal_area"}]}