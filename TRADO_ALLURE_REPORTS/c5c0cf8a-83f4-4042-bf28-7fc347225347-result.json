{"name": "Log in with non-existing account - security invalid", "status": "skipped", "statusDetails": {"message": "XFAIL EXPECTED LOGIN FAILURE\n\nTypeError: 'NoneType' object is not iterable", "trace": "driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"9c251fc6-b47c-4202-9eaa-2d10bfc55a75\")>\n\n    @allure.epic('Test Login')\n    @allure.id(14)\n    @allure.title(\"Log in with non-existing account - security invalid\")\n    @allure.description('Invalid account error will show up')\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.xfail(condition=lambda: True, reason='EXPECTED LOGIN FAILURE')\n    def test_log_in_invalid_details(driver):\n        login = L.LoginPage(driver)\n        with allure.step('Trying to log into non existing account'):\n>           login.log_in('jjjjjjjjjj', True, False)\n\nTest_Login.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nProject_folder\\pages\\Login_Pages.py:48: in log_in\n    Commons.insert_security_code(self, phone_number, security_off)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Project_folder.pages.Login_Pages.LoginPage object at 0x000001A771A38C90>, phone_number = 'jjjjjjjjjj', false_flag = False\n\n    def insert_security_code(self, phone_number, false_flag):\n        self.wait_for(Commons.SUBMIT_CONFIRMATION)\n        requests = R.MongoRequests()\n        login_code = requests.find_login_code(phone_number)\n        signup_list = [\n            Commons.FIRST_NUMBER,\n            Commons.SECOND_NUMBER,\n            Commons.THIRD_NUMBER,\n            Commons.FOURTH_NUMBER,\n            Commons.FIFTH_NUMBER\n        ]\n        list_count = 0\n        if false_flag:\n            for f in '00000':\n                self.insert(signup_list[list_count], f)\n                list_count += 1\n        else:\n>           for i in login_code:\nE           TypeError: 'NoneType' object is not iterable\n\nProject_folder\\pages\\common_page.py:119: TypeError"}, "description": "Invalid account error will show up", "steps": [{"name": "Trying to log into non existing account", "status": "broken", "statusDetails": {"message": "TypeError: 'NoneType' object is not iterable\n", "trace": "  File \"C:\\Users\\liad\\Documents\\GitHub\\Trado-Testing-project\\Test_Login.py\", line 56, in test_log_in_invalid_details\n    login.log_in('jjjjjjjjjj', True, False)\n  File \"C:\\Users\\liad\\Documents\\GitHub\\Trado-Testing-project\\Project_folder\\pages\\Login_Pages.py\", line 48, in log_in\n    Commons.insert_security_code(self, phone_number, security_off)\n  File \"C:\\Users\\liad\\Documents\\GitHub\\Trado-Testing-project\\Project_folder\\pages\\common_page.py\", line 119, in insert_security_code\n    for i in login_code:\n"}, "start": 1680022362963, "stop": 1680022364830}], "start": 1680022362963, "stop": 1680022364832, "uuid": "4add5c2e-ffe8-4652-8cbc-0878187786b0", "historyId": "41c6f39eb1fe86a22f595e5794297b9e", "testCaseId": "471297f9c6eb1c461a6606e62ede4202", "fullName": "Test_Login#test_log_in_invalid_details", "labels": [{"name": "severity", "value": "critical"}, {"name": "epic", "value": "Test Login"}, {"name": "as_id", "value": 14}, {"name": "tag", "value": "@pytest.mark.xfail(condition=<function <lambda> at 0x000001A7718C58A0>, reason='EXPECTED LOGIN FAILURE')"}, {"name": "suite", "value": "Test_Login"}, {"name": "host", "value": "TWEEJ5"}, {"name": "thread", "value": "18924-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_Login"}]}