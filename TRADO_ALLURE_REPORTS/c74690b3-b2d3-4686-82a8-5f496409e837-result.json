{"name": "Products listed == Products in DB", "status": "failed", "statusDetails": {"message": "AssertionError: assert 19 == 345\n +  where 19 = <bound method HomePage.get_item_list_size of <Project_folder.pages.Home_Page_pages.HomePage object at 0x000001A772168250>>()\n +    where <bound method HomePage.get_item_list_size of <Project_folder.pages.Home_Page_pages.HomePage object at 0x000001A772168250>> = <Project_folder.pages.Home_Page_pages.HomePage object at 0x000001A772168250>.get_item_list_size\n +  and   345 = <bound method MongoRequests.get_product_count of <Project_folder.MongoDB_requests.MongoRequests object at 0x000001A7721F7790>>()\n +    where <bound method MongoRequests.get_product_count of <Project_folder.MongoDB_requests.MongoRequests object at 0x000001A7721F7790>> = <Project_folder.MongoDB_requests.MongoRequests object at 0x000001A7721F7790>.get_product_count", "trace": "driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"44d62bb0-7295-47f3-a564-54287759218a\")>\n\n    @allure.epic('Test Home')\n    @allure.id(33)\n    @allure.title('Products listed == Products in DB')\n    @allure.description('Verifying that the amount of products listed as available is number of products in db')\n    def test_product_count_in_db(driver):\n        home = H.HomePage(driver)\n        requests = R.MongoRequests()\n        with allure.step('Asserting products listed == products in DB'):\n>           assert home.get_item_list_size() == requests.get_product_count()\nE           assert 19 == 345\nE            +  where 19 = <bound method HomePage.get_item_list_size of <Project_folder.pages.Home_Page_pages.HomePage object at 0x000001A772168250>>()\nE            +    where <bound method HomePage.get_item_list_size of <Project_folder.pages.Home_Page_pages.HomePage object at 0x000001A772168250>> = <Project_folder.pages.Home_Page_pages.HomePage object at 0x000001A772168250>.get_item_list_size\nE            +  and   345 = <bound method MongoRequests.get_product_count of <Project_folder.MongoDB_requests.MongoRequests object at 0x000001A7721F7790>>()\nE            +    where <bound method MongoRequests.get_product_count of <Project_folder.MongoDB_requests.MongoRequests object at 0x000001A7721F7790>> = <Project_folder.MongoDB_requests.MongoRequests object at 0x000001A7721F7790>.get_product_count\n\nTest_Home.py:185: AssertionError"}, "description": "Verifying that the amount of products listed as available is number of products in db", "steps": [{"name": "Asserting products listed == products in DB", "status": "failed", "statusDetails": {"message": "AssertionError: assert 19 == 345\n +  where 19 = <bound method HomePage.get_item_list_size of <Project_folder.pages.Home_Page_pages.HomePage object at 0x000001A772168250>>()\n +    where <bound method HomePage.get_item_list_size of <Project_folder.pages.Home_Page_pages.HomePage object at 0x000001A772168250>> = <Project_folder.pages.Home_Page_pages.HomePage object at 0x000001A772168250>.get_item_list_size\n +  and   345 = <bound method MongoRequests.get_product_count of <Project_folder.MongoDB_requests.MongoRequests object at 0x000001A7721F7790>>()\n +    where <bound method MongoRequests.get_product_count of <Project_folder.MongoDB_requests.MongoRequests object at 0x000001A7721F7790>> = <Project_folder.MongoDB_requests.MongoRequests object at 0x000001A7721F7790>.get_product_count\n", "trace": "  File \"C:\\Users\\liad\\Documents\\GitHub\\Trado-Testing-project\\Test_Home.py\", line 185, in test_product_count_in_db\n    assert home.get_item_list_size() == requests.get_product_count()\n"}, "start": 1680022294938, "stop": 1680022295541}], "start": 1680022292865, "stop": 1680022295542, "uuid": "78719ee1-2652-414c-a5c4-73dc961a3409", "historyId": "f6d845959ef416b0538faa20d3c9903f", "testCaseId": "6a9734f8b973dd0d65912cd0dc040412", "fullName": "Test_Home#test_product_count_in_db", "labels": [{"name": "as_id", "value": 33}, {"name": "epic", "value": "Test Home"}, {"name": "suite", "value": "Test_Home"}, {"name": "host", "value": "TWEEJ5"}, {"name": "thread", "value": "18924-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_Home"}]}