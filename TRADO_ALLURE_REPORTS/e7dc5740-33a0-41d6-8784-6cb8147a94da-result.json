{"name": "Random product display details same as DB", "status": "failed", "statusDetails": {"message": "AssertionError: assert 10000 == 9919", "trace": "driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"5e3b0c25-ccc1-42ab-b96a-9a90456339fd\")>\n\n    @allure.epic('Test Products')\n    @allure.id(26)\n    @allure.title(\"Random product display details same as DB\")\n    @allure.description('Check that product information between site and DB is accurate')\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_random_item_details(driver):\n        products = P.ProductPage(driver)\n        request = R.MongoRequests()\n        with allure.step('selecting random product'):\n            products.select_random_product()\n        with allure.step('Getting Necessary information about the random product'):\n            id = products.get_number(products.PRODUCT_ID)\n            units_per = products.get_number(products.UNITS_PER_CARTON)\n            price_per = products.get_decimal_number(products.PRICE_PER_CARTON)\n            stock = products.get_number(products.STOCK_AMOUNT)\n            dbstock, dbprice, dbunits_in_carton = request.get_product_info(str(id))\n        with allure.step('Verifying in the database that the info is correct'):\n            assert dbprice == price_per\n            assert units_per == dbunits_in_carton\n>           assert stock == dbstock\nE           assert 10000 == 9919\n\nTest_Products.py:48: AssertionError"}, "description": "Check that product information between site and DB is accurate", "steps": [{"name": "selecting random product", "status": "passed", "start": 1680022441441, "stop": 1680022441686}, {"name": "Getting Necessary information about the random product", "status": "passed", "start": 1680022441687, "stop": 1680022444158}, {"name": "Verifying in the database that the info is correct", "status": "failed", "statusDetails": {"message": "AssertionError: assert 10000 == 9919\n", "trace": "  File \"C:\\Users\\liad\\Documents\\GitHub\\Trado-Testing-project\\Test_Products.py\", line 48, in test_random_item_details\n    assert stock == dbstock\n"}, "start": 1680022444158, "stop": 1680022444158}], "start": 1680022431195, "stop": 1680022444159, "uuid": "77f8264f-f381-4762-b2d0-b83ba85fbdef", "historyId": "5c118f2c989c5249cde592709df86a21", "testCaseId": "8c0346ce84bd2da8b690ba670505ead5", "fullName": "Test_Products#test_random_item_details", "labels": [{"name": "severity", "value": "normal"}, {"name": "epic", "value": "Test Products"}, {"name": "as_id", "value": 26}, {"name": "suite", "value": "Test_Products"}, {"name": "host", "value": "TWEEJ5"}, {"name": "thread", "value": "18924-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_Products"}]}