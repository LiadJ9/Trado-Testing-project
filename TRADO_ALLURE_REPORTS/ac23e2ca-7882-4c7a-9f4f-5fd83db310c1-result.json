{"name": "Dynamic cart in /products page updates as items are added", "status": "failed", "statusDetails": {"message": "AssertionError: assert (1000 + 1000) == 1100\n +  where 1100 = <bound method ProductPage.get_number of <Project_folder.pages.Product_pages.ProductPage object at 0x000001A771A111D0>>(('css selector', '.inlineProduct_units > div:nth-child(1)'))\n +    where <bound method ProductPage.get_number of <Project_folder.pages.Product_pages.ProductPage object at 0x000001A771A111D0>> = <Project_folder.pages.Product_pages.ProductPage object at 0x000001A771A111D0>.get_number\n +    and   ('css selector', '.inlineProduct_units > div:nth-child(1)') = <Project_folder.pages.Product_pages.ProductPage object at 0x000001A771A111D0>.UNITS_IN_CART", "trace": "driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"2c5436e5-3417-4baf-8305-4990422f0123\")>\n\n    @allure.epic('Test Products')\n    @allure.id(28)\n    @allure.title('Dynamic cart in /products page updates as items are added')\n    @allure.description('Verify that the dynamic cart element updates as items in the cart change')\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_dynamic_cart(driver):\n        products = P.ProductPage(driver)\n        with allure.step('selecting random product'):\n            products.select_random_product()\n        with allure.step('Adding the random product'):\n            products.click_(products.ADD_PRODUCT)\n        with allure.step('Getting Necessary information about the random product in cart'):\n            cartons_before = products.get_number(products.CARTONS_IN_CART)\n            units_before = products.get_number(products.UNITS_IN_CART)\n            price_before = products.get_decimal_number(products.CART_ITEM_PRICE)\n        with allure.step('Adding additional item to cart'):\n            products.click_(products.ADD_PRODUCT_IN_CART)\n        with allure.step('Asserting price, units and cartons have changed'):\n>           assert units_before+units_before == products.get_number(products.UNITS_IN_CART)\nE           AssertionError: assert (1000 + 1000) == 1100\nE            +  where 1100 = <bound method ProductPage.get_number of <Project_folder.pages.Product_pages.ProductPage object at 0x000001A771A111D0>>(('css selector', '.inlineProduct_units > div:nth-child(1)'))\nE            +    where <bound method ProductPage.get_number of <Project_folder.pages.Product_pages.ProductPage object at 0x000001A771A111D0>> = <Project_folder.pages.Product_pages.ProductPage object at 0x000001A771A111D0>.get_number\nE            +    and   ('css selector', '.inlineProduct_units > div:nth-child(1)') = <Project_folder.pages.Product_pages.ProductPage object at 0x000001A771A111D0>.UNITS_IN_CART\n\nTest_Products.py:87: AssertionError"}, "description": "Verify that the dynamic cart element updates as items in the cart change", "steps": [{"name": "selecting random product", "status": "passed", "start": 1680022464014, "stop": 1680022464330}, {"name": "Adding the random product", "status": "passed", "start": 1680022464330, "stop": 1680022464551}, {"name": "Getting Necessary information about the random product in cart", "status": "passed", "start": 1680022464551, "stop": 1680022464610}, {"name": "Adding additional item to cart", "status": "passed", "start": 1680022464610, "stop": 1680022464827}, {"name": "Asserting price, units and cartons have changed", "status": "failed", "statusDetails": {"message": "AssertionError: assert (1000 + 1000) == 1100\n +  where 1100 = <bound method ProductPage.get_number of <Project_folder.pages.Product_pages.ProductPage object at 0x000001A771A111D0>>(('css selector', '.inlineProduct_units > div:nth-child(1)'))\n +    where <bound method ProductPage.get_number of <Project_folder.pages.Product_pages.ProductPage object at 0x000001A771A111D0>> = <Project_folder.pages.Product_pages.ProductPage object at 0x000001A771A111D0>.get_number\n +    and   ('css selector', '.inlineProduct_units > div:nth-child(1)') = <Project_folder.pages.Product_pages.ProductPage object at 0x000001A771A111D0>.UNITS_IN_CART\n", "trace": "  File \"C:\\Users\\liad\\Documents\\GitHub\\Trado-Testing-project\\Test_Products.py\", line 87, in test_dynamic_cart\n    assert units_before+units_before == products.get_number(products.UNITS_IN_CART)\n"}, "start": 1680022464827, "stop": 1680022464841}], "start": 1680022464014, "stop": 1680022464844, "uuid": "b84d0b4d-ad70-4441-84f3-a2077f4ad867", "historyId": "5b204c06f3f396fe329f916b4c3d1436", "testCaseId": "396681133e4df9d6853d466a43d12bba", "fullName": "Test_Products#test_dynamic_cart", "labels": [{"name": "as_id", "value": 28}, {"name": "severity", "value": "normal"}, {"name": "epic", "value": "Test Products"}, {"name": "suite", "value": "Test_Products"}, {"name": "host", "value": "TWEEJ5"}, {"name": "thread", "value": "18924-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_Products"}]}