{"name": "Register account - invalid phone number - Valid business number - (N) - PP true", "status": "skipped", "statusDetails": {"message": "XFAIL EXPECTED LOGIN FAILURE\n\nTypeError: 'NoneType' object is not iterable", "trace": "driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"640a3057-8327-487f-9fe7-a4b69c932af7\")>\n\n    @allure.epic('Test Registration')\n    @allure.id(20)\n    @allure.title('Register account - invalid phone number - Valid business number - (N) - PP true')\n    @allure.description('Registering an account wih invalid phone number + valid business number should deny access')\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.xfail(condition=lambda: True, reason='EXPECTED LOGIN FAILURE')\n    def test_signup_invalid_phone_number_and_valid_business_num(driver):\n        signup = Rp.SignupPage(driver)\n        with allure.step('Creating an invalid account'):\n>           signup.sign_up(True, True, True, True, True, False, False)\n\nTest_Registration.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nProject_folder\\pages\\Registration_pages.py:87: in sign_up\n    login_code = Commons.insert_security_code(self, phone_number, False)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Project_folder.pages.Registration_pages.SignupPage object at 0x000001A771A21650>, phone_number = 'blargabcdk', false_flag = False\n\n    def insert_security_code(self, phone_number, false_flag):\n        self.wait_for(Commons.SUBMIT_CONFIRMATION)\n        requests = R.MongoRequests()\n        login_code = requests.find_login_code(phone_number)\n        signup_list = [\n            Commons.FIRST_NUMBER,\n            Commons.SECOND_NUMBER,\n            Commons.THIRD_NUMBER,\n            Commons.FOURTH_NUMBER,\n            Commons.FIFTH_NUMBER\n        ]\n        list_count = 0\n        if false_flag:\n            for f in '00000':\n                self.insert(signup_list[list_count], f)\n                list_count += 1\n        else:\n>           for i in login_code:\nE           TypeError: 'NoneType' object is not iterable\n\nProject_folder\\pages\\common_page.py:119: TypeError"}, "description": "Registering an account wih invalid phone number + valid business number should deny access", "steps": [{"name": "Creating an invalid account", "status": "broken", "statusDetails": {"message": "TypeError: 'NoneType' object is not iterable\n", "trace": "  File \"C:\\Users\\liad\\Documents\\GitHub\\Trado-Testing-project\\Test_Registration.py\", line 56, in test_signup_invalid_phone_number_and_valid_business_num\n    signup.sign_up(True, True, True, True, True, False, False)\n  File \"C:\\Users\\liad\\Documents\\GitHub\\Trado-Testing-project\\Project_folder\\pages\\Registration_pages.py\", line 87, in sign_up\n    login_code = Commons.insert_security_code(self, phone_number, False)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\liad\\Documents\\GitHub\\Trado-Testing-project\\Project_folder\\pages\\common_page.py\", line 119, in insert_security_code\n    for i in login_code:\n"}, "start": 1680022532993, "stop": 1680022535498}], "start": 1680022532993, "stop": 1680022535500, "uuid": "a3a8396b-3156-4e35-bc6b-23ef563dc64e", "historyId": "fe94eb047ed733f46d17b6e401979cea", "testCaseId": "dd0da3adc0c651ce5c1ec5cb3cabf53f", "fullName": "Test_Registration#test_signup_invalid_phone_number_and_valid_business_num", "labels": [{"name": "severity", "value": "critical"}, {"name": "epic", "value": "Test Registration"}, {"name": "as_id", "value": 20}, {"name": "tag", "value": "@pytest.mark.xfail(condition=<function <lambda> at 0x000001A7718C6840>, reason='EXPECTED LOGIN FAILURE')"}, {"name": "suite", "value": "Test_Registration"}, {"name": "host", "value": "TWEEJ5"}, {"name": "thread", "value": "18924-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_Registration"}]}